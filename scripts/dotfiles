#!/bin/bash

# List all scripts with a short description what they are doing.


set -o errexit -o nounset -o pipefail
SCRIPT_FILENAME=$(readlink -f $0)
SCRIPT_PATH=$(dirname $SCRIPT_FILENAME)
INCLUDE_PATH=${SCRIPT_PATH}/../lib/bash

source ${INCLUDE_PATH}/help.sh
source ${INCLUDE_PATH}/string.sh


declare -A GL__SCRIPTS_DESCRIPTION

# GL__SCRIPTS_DESCRIPTION=( ["add-license-file"]="Add a license file to a repository" \
#                                               ["bootstrap_system "]="obsolete")


function list_scripts {
    local ABS_SCRIPT_FILENAME
    local RELATIVE_SCRIPT_FILENAME
    local TABBED_FILENAME
    for ABS_SCRIPT_FILENAME in $(find ${SCRIPT_PATH} |sort); do
        if [ ! -d  ${ABS_SCRIPT_FILENAME} ]; then
            RELATIVE_SCRIPT_FILENAME=$(basename ${ABS_SCRIPT_FILENAME})
            TABBED_FILENAME=$(fill_tail ${RELATIVE_SCRIPT_FILENAME} 28 " ")
            # get_short_description ${ABS_SCRIPT_FILENAME}

            echo "${TABBED_FILENAME}$(short_description ${ABS_SCRIPT_FILENAME})"
        fi
    done
}

# absolute_script_filename {
#     local SCRIPT_NAME=${1}
#     local SCRIPT_EXISTS=1
#     local ABS_SCRIPT_FILENAME


# }

# Print a section of a documentation of a script.
function dotfiles_doc {
    if [ "${#}" -eq "0" ]; then
        invalid_parameter_exit "No section."
    fi
    if [ "${#}" -eq "1" ]; then
        invalid_parameter_exit "No script name."
    fi
    local SECTION=${1}
    local SCRIPT_NAME=${2}
    case ${SECTION} in
        'short')
            short_description ${SCRIPT_NAME}
        ;;
        'long')
            long_description ${SCRIPT_NAME}
            ;;
        'usage')
            usage ${SCRIPT_NAME}
            ;;
        *)
            invalid_parameter_exit "Unknown documentation section: ${SECTION}."
            ;;
    esac
}

# Default action if script is called without parameters.
function no_param {
    list_scripts
}

function main() {
    if [ "${#}" -eq "0" ]; then
        no_param
    else
        case ${1} in
            doc)
                shift
                dotfiles_doc "${@}"
                ;;
            *)
                invalid_parameter_exit
                ;;
        esac
    fi
}

main "${@}"
