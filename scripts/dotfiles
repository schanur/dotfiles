#!/bin/bash

# List all scripts with a short description what they are doing.


set -o errexit -o nounset -o pipefail
SCRIPT_FILENAME=$(readlink -f $0)
SCRIPT_PATH=$(dirname $SCRIPT_FILENAME)
DOTFILES_PATH=${SCRIPT_PATH}/..

source ${DOTFILES_PATH}/lib/bivalvia/help.sh
source ${DOTFILES_PATH}/lib/bivalvia/path.sh
source ${DOTFILES_PATH}/lib/bivalvia/string.sh


function list_scripts {
    local ABS_SCRIPT_FILENAME
    local RELATIVE_SCRIPT_FILENAME
    local TABBED_FILENAME
    local SCRIPT_GROUP
    local SCRIPT_NAME

    for SCRIPT_GROUP_PATH in $(echo ${SCRIPT_PATH} $(find ${DOTFILES_PATH}/scripts-extra -mindepth 1 -type d | sort)); do
        SCRIPT_GROUP="$(deepest_path ${SCRIPT_GROUP_PATH})"
        echo
        echo ${SCRIPT_GROUP}
        echo $(fill_tail ${#SCRIPT_GROUP} "-" "")
        echo
        for ABS_SCRIPT_FILENAME in $(find ${SCRIPT_GROUP_PATH} -mindepth 1 | sort); do
            SCRIPT_NAME="$(basename ${ABS_SCRIPT_FILENAME})"
            RELATIVE_SCRIPT_FILENAME=$(basename ${ABS_SCRIPT_FILENAME})
            TABBED_FILENAME=$(fill_tail 28 " " ${RELATIVE_SCRIPT_FILENAME})
            echo "${TABBED_FILENAME}$(short_description ${ABS_SCRIPT_FILENAME})"
        done
    done
}

# Print a section of a documentation of a script.
function dotfiles_doc {
    if [ "${#}" -eq "0" ]; then
        invalid_parameter_exit "No section."
    fi
    if [ "${#}" -eq "1" ]; then
        invalid_parameter_exit "No script name."
    fi
    local SECTION=${1}
    local SCRIPT_NAME=${2}
    case ${SECTION} in
        'short')
            short_description ${SCRIPT_NAME}
        ;;
        'long')
            long_description ${SCRIPT_NAME}
            ;;
        'usage')
            usage ${SCRIPT_NAME}
            ;;
        *)
            invalid_parameter_exit "Unknown documentation section: ${SECTION}."
            ;;
    esac
}

# Default action if script is called without parameters.
function no_param {
    list_scripts
}

function main() {
    if [ "${#}" -eq "0" ]; then
        no_param
    else
        case ${1} in
            doc)
                shift
                dotfiles_doc "${@}"
                ;;
            *)
                invalid_parameter_exit
                ;;
        esac
    fi
}

main "${@}"
