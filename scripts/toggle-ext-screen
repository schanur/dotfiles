#!/bin/bash

# Switch external screen on/off based on current state.

# TODO:
# - Use config file instead of hard coded resolution and screen
# - Allow more than one external screen?
# - If no screen is found in config file, use the first one with the
#   maximum allowed screen resolution.
# - Add help.


set -o errexit -o nounset -o pipefail
SCRIPT_FILENAME=$(readlink -f $0)
SCRIPT_PATH=$(dirname $SCRIPT_FILENAME)
DOTFILES_PATH=${SCRIPT_PATH}/..

source ${DOTFILES_PATH}/lib/bash/help.sh

INTERNAL_SCREEN_NAME="LVDS-1"
EXTERNAL_SCREEN_NAME="VGA-1"

function active_connected_screens() {
    xrandr |grep "*" |grep -c "+"
}

function active_disconnected_screens() {
    xrandr |grep "*" |grep -c "+"
}

function active_screens() {
    expr $(active_connected_screens) + $(active_disconnected_screens)

}

function screen_on() {
    CMD="xrandr --output ${EXTERNAL_SCREEN_NAME} --mode 1440x900 --left-of ${INTERNAL_SCREEN_NAME}"
    echo ${CMD}
    ${CMD}
}

function screen_off() {
    CMD="xrandr --output ${EXTERNAL_SCREEN_NAME} --off"
    echo ${CMD}
    ${CMD}
}

function screen_toggle() {
    local ACTIVE_SCREEN_CNT=$(active_screens)

    case ${ACTIVE_SCREEN_CNT} in
        1)
            screen_on
            ;;
        2)
            screen_off
            ;;
        *)
            echo "Wrong number of currently active screens: ${ACTIVE_SCREEN_CNT}"
            ;;
    esac
}

function main() {
    active_screens
    screen_toggle
}

main

