#!/bin/bash

# Switch external screen on/off based on current state.

# TODO:
# - Use config file instead of hard coded resolution and screen
# - Allow more than one external screen?
# - If no screen is found in config file, use the first one with the
#   maximum allowed screen resolution.
# - Add help.


set -o errexit -o nounset -o pipefail
SCRIPT_FILENAME="$(readlink -f "${0}")"
SCRIPT_PATH="$(dirname "${SCRIPT_FILENAME}")"
DOTFILES_PATH="${SCRIPT_PATH}/.."

source "${DOTFILES_PATH}/lib/bivalvia/help.sh"
source "${DOTFILES_PATH}/lib/bivalvia/debug.sh"


INTERNAL_SCREEN_NAME="LVDS-1"
EXTERNAL_SCREEN_NAME="VGA-1"

XRANDR_OUTPUT=""

function cache_xrandr_output {
    XRANDR_OUTPUT="$(xrandr)"
}

# function active_connected_screens {
#     echo "${XRANDR_OUTPUT}" | grep "*" | grep -c "+"
# }

# function active_disconnected_screens {
#     echo "${XRANDR_OUTPUT}" | grep "*" | grep -c "+"
# }

function second_screen_preffered_resolution {
    echo "${XRANDR_OUTPUT}" | grep "[ *]+" | tail -n 1 | tr -s ' ' | cut -f 2 -d ' '
}

function active_screens() {
    echo "${XRANDR_OUTPUT}" | grep -c "*+"
    # expr $(active_connected_screens) + $(active_disconnected_screens)
}

function screen_on {
    local NATIVE_RESOLUTION=$(second_screen_preffered_resolution)

    CMD="\
xrandr --output  ${EXTERNAL_SCREEN_NAME}
       --mode    ${NATIVE_RESOLUTION}
       --left-of ${INTERNAL_SCREEN_NAME}
"
    echo ${CMD}
    ${CMD}
}

function screen_off {
    CMD="\
xrandr --output ${EXTERNAL_SCREEN_NAME} --off
"
    echo ${CMD}
    ${CMD}
}

function screen_toggle {
    local ACTIVE_SCREEN_CNT=$(active_screens)
    local PREFFERED_RESOLUTION=$(second_screen_preffered_resolution)

    case ${ACTIVE_SCREEN_CNT} in
        1)
            screen_on
            ;;
        2)
            screen_off
            ;;
        *)
            echo "Wrong number of currently active screens: ${ACTIVE_SCREEN_CNT}"
            ;;
    esac
}

function main {
    cache_xrandr_output
    echo "Active screens: $(active_screens)"

    screen_toggle
}

main

