#!/bin/bash

# Parse proc stat file of a process ID.


set -o errexit -o nounset -o pipefail


SCRIPT_FILENAME=$(readlink -f $0)
SCRIPT_PATH=$(dirname $SCRIPT_FILENAME)
INCLUDE_PATH=${SCRIPT_PATH}/../lib/bash

source ${INCLUDE_PATH}/string.sh

function echo_align {
    local STRING=${1}
    echo -n "$(fill_tail ${STRING}: 25 ' ')"
}

PROCESS_ID=${1}
STAT_FILE="/proc/${PROCESS_ID}/stat"

if [ ! -f ${STAT_FILE} ]; then
    echo "Invalid process ID."
fi

# Generated by:
# man proc |egrep "^\ *\([0-9]*\)" | tail -n +17 |head -n 52 |sed -e 's/^\ *([0-9]*)\ //g' |sed -e 's/\ (.*//g'
FIELD_DESCRIPTION=(
    "pid  %d"
    "comm  %s"
    "state  %c"
    "ppid  %d"
    "pgrp  %d"
    "session  %d"
    "tty_nr  %d"
    "tpgid  %d"
    "flags  %u"
    "minflt  %lu"
    "cminflt  %lu"
    "majflt  %lu"
    "cmajflt  %lu"
    "utime  %lu"
    "stime  %lu"
    "cutime  %ld"
    "cstime  %ld"
    "priority  %ld"
    "nice  %ld"
    "num_threads  %ld"
    "itrealvalue  %ld"
    "starttime  %llu"
    "vsize  %lu"
    "rss  %ld"
    "rsslim  %lu"
    "startcode  %lu"
    "endcode  %lu"
    "startstack  %lu"
    "kstkesp  %lu"
    "kstkeip  %lu"
    "signal  %lu"
    "blocked  %lu"
    "sigignore  %lu"
    "sigcatch  %lu"
    "wchan  %lu"
    "nswap  %lu"
    "cnswap  %lu"
    "exit_signal  %d"
    "processor  %d"
    "rt_priority  %u"
    "policy  %u"
    "delayacct_blkio_ticks  %llu"
    "guest_time  %lu"
    "cguest_time  %ld"
    "start_data  %lu"
    "end_data  %lu"
    "start_brk  %lu"
    "arg_start  %lu"
    "arg_end  %lu"
    "env_start  %lu"
    "env_end  %lu"
    "exit_code  %d"
)

I=0
for STAT_VAR in $(cat ${STAT_FILE}) ; do
    echo "${I}: $(echo_align ${FIELD_DESCRIPTION[${I}]}) $STAT_VAR"
    let I=I+1
done
