#!/bin/bash

# Change author and committer of multible/all commits of a git repository.

# Usage: $EXECUTABLE_NAME


set -o errexit -o nounset -o pipefail
SCRIPT_FILENAME=$(readlink -f $0)
SCRIPT_PATH=$(dirname $SCRIPT_FILENAME)
DOTFILES_PATH=${SCRIPT_PATH}/../..

source ${DOTFILES_PATH}/lib/bivalvia/help.sh


function change_credentials {
    OLD_EMAIL_ADDRESS=${1}
    NEW_EMAIL_ADDRESS=${2}
    NEW_USERNAME=${3}

# WRONG_EMAIL="b.griebenow@sonotec.de"
 git filter-branch -f --env-filter '
WRONG_EMAIL="ze@debian-8-dev"
NEW_EMAIL="b.griebenow@web.de"
NEW_NAME="Bjoern Griebenow"

if [ "$GIT_COMMITTER_EMAIL" = "$WRONG_EMAIL" ]
then
    export GIT_COMMITTER_NAME="$NEW_NAME"
    export GIT_COMMITTER_EMAIL="$NEW_EMAIL"
fi
if [ "$GIT_AUTHOR_EMAIL" = "$WRONG_EMAIL" ]
then
    export GIT_AUTHOR_NAME="$NEW_NAME"
    export GIT_AUTHOR_EMAIL="$NEW_EMAIL"
fi
' --tag-name-filter cat -- --branches --tags
}

function change_all_credentials {
    NEW_EMAIL_ADDRESS=${1}
    NEW_USERNAME=${2}

# WRONG_EMAIL="b.griebenow@sonotec.de"
 git filter-branch -f --env-filter '
NEW_EMAIL="b.griebenow@web.de"
NEW_NAME="Bjoern Griebenow"
    export GIT_COMMITTER_NAME="$NEW_NAME"
    export GIT_COMMITTER_EMAIL="$NEW_EMAIL"
    export GIT_AUTHOR_NAME="$NEW_NAME"
    export GIT_AUTHOR_EMAIL="$NEW_EMAIL"
' --tag-name-filter cat -- --branches --tags
}

# function change_credentials {
#     OLD_EMAIL_ADDRESS=${1}
#     NEW_EMAIL_ADDRESS=${2}
#     NEW_USERNAME=${3}

#     local FILTER_CMD="git filter-branch --env-filter '""WRONG_EMAIL=\"${OLD_EMAIL_ADDRESS}\";
# CORRECT_NAME=\"${NEW_USERNAME}\"
# CORRECT_EMAIL=\"${NEW_EMAIL_ADDRESS}\""'if [ "$GIT_COMMITTER_EMAIL" = "$WRONG_EMAIL" ]
# then
#     export GIT_COMMITTER_NAME="$CORRECT_NAME"
#     export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
# fi
# if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]
# then
#     export GIT_AUTHOR_NAME="$CORRECT_NAME"
#     export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
# fi'"' --tag-name-filter cat -- --branches --tags"

#     echo ${FILTER_CMD}
#     echo
#     eval ${FILTER_CMD}
# }


# function change_credentials {
#     OLD_EMAIL_ADDRESS=${1}
#     NEW_EMAIL_ADDRESS=${2}
#     NEW_USERNAME=${3}

#     echo ${OLD_EMAIL_ADDRESS}
#     echo ${NEW_EMAIL_ADDRESS}
#     echo ${NEW_USERNAME}

#     local INTERPRETEED_CMD_PART="a""b"
#     local NON_INTERPRETEED_CMD_PART

#     exit 1
#     FILTER_CMD="git filter-branch --env-filter \"
#     OLD_EMAIL_ADDRESS="${1}"
#     NEW_EMAIL_ADDRESS="${2}"
#     NEW_USERNAME="${3}"

#     if [ \"\$GIT_COMMITTER_EMAIL\" = \"${OLD_EMAIL_ADDRESS}\" ]; then
#         export GIT_COMMITTER_NAME=\"${NEW_USERNAME}\"
#         export GIT_COMMITTER_EMAIL=\"${NEW_EMAIL_ADDRESS}\"
#     fi
#     if [ \"\$GIT_AUTHOR_EMAIL\" = \"${OLD_EMAIL_ADDRESS}\" ]; then
#         export GIT_AUTHOR_NAME=\"${NEW_USERNAME}\"
#         export GIT_AUTHOR_EMAIL=\"${NEW_EMAIL_ADDRESS}\"
#     fi
#     \" --tag-name-filter cat -- --branches --tags"

#     echo ${FILTER_CMD}
#     eval ${FILTER_CMD}
#     exit 1
# }

function main {
    local FILTER_FUNCTION="change_credentials"

    if [ "${#}" -ne "3" ]; then
        invalid_parameter_exit
    fi

    if [ "${1}" = "-a" ]; then
        FILTER_FUNCTION="change_all_credentials"
        shift
    fi
        ${FILTER_FUNCTION} "${@}"
        # exit EXIT_STATUS=$?
}

main "${@}"
